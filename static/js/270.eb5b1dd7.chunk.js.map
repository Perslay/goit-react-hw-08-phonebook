{"version":3,"file":"static/js/270.eb5b1dd7.chunk.js","mappings":"kLACA,QAAuB,uB,aCGvB,MA2DA,EA3DiBA,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MAuCjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SAtCRC,IACnBA,EAAMC,iBACN,MAAMC,EAAOF,EAAMG,cACnBT,GACEU,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OAAO,EA4BuCC,aAAa,MAAKC,SAAA,EACnEhB,EAAAA,EAAAA,MAAA,OAAAgB,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,gBAAeF,SAAC,cAC/BC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOV,KAAK,OAAOW,GAAG,sBAEpCpB,EAAAA,EAAAA,MAAA,OAAAgB,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,iBAAgBF,SAAC,WAChCC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOV,KAAK,QAAQW,GAAG,uBAErCpB,EAAAA,EAAAA,MAAA,OAAAgB,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,oBAAmBF,SAAC,cACnCC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOV,KAAK,WAAWW,GAAG,0BAExCH,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,eACjB,C","sources":["webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__c8aUa\"};","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/operations/auth';\nimport css from './Register.module.css';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  // const dispatch = useDispatch();\n  // const [form, setForm] = useState({ name: '', email: '', password: '' });\n  // const { loading, error } = useSelector(state => state.auth);\n\n  // const handleChange = e => {\n  //   const { name, value } = e.target;\n  //   setForm(prevForm => ({ ...prevForm, [name]: value }));\n  // };\n\n  // const handleSubmit = event => {\n  //   event.preventDefault();\n  //   // const form = event.currentTarget;\n  //   // dispatch(\n  //   //   register({\n  //   //     name: form.elements.name.value,\n  //   //     email: form.elements.email.value,\n  //   //     password: form.elements.password.value,\n  //   //   })\n  //   // );\n  //   dispatch(register(form));\n  //   setForm({ name: '', email: '', password: '' });\n  //   // form.reset();\n  // };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <div>\n        <label htmlFor=\"register-name\">Username</label>\n        <input type=\"text\" name=\"name\" id=\"register-name\" />\n      </div>\n      <div>\n        <label htmlFor=\"register-email\">Email</label>\n        <input type=\"text\" name=\"email\" id=\"register-email\" />\n      </div>\n      <div>\n        <label htmlFor=\"register-password\">Password</label>\n        <input type=\"text\" name=\"password\" id=\"register-password\" />\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default Register;\n"],"names":["Register","dispatch","useDispatch","_jsxs","className","css","onSubmit","event","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","children","_jsx","htmlFor","type","id"],"sourceRoot":""}