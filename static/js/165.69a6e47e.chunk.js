"use strict";(self.webpackChunkreact_homework_template=self.webpackChunkreact_homework_template||[]).push([[165],{165:(e,t,a)=>{a.r(t),a.d(t,{default:()=>X});var s=a(3),n=a(99);const r=e=>e.contacts.items,c=e=>e.contacts.isLoading,l=e=>e.contacts.error,o=(0,n.Mz)([r,e=>e.filter.status],((e,t)=>e.filter((e=>e.name.toLowerCase().includes(t.toLowerCase())))));var i=a(708),d=a(903),m=a(809);const _="ContactForm_form__dhl+T",h="ContactForm_formBox__cXiHe",p="ContactForm_label__-cVXI",x="ContactForm_input__Bl93P",u="ContactForm_button__eSwX9";var C=a(579);const j=()=>{const e=(0,m.Ak)(),t=(0,m.Ak)(),a=(0,s.wA)(),n=(0,s.d4)(r);return(0,C.jsxs)("form",{className:_,onSubmit:e=>{e.preventDefault();const t=e.currentTarget,s=t[0].value,r=t[1].value;n.some((e=>e.name===s))?alert(s+" is already in contacts."):a((0,d.IP)({name:s,phone:r})),t.reset()},children:[(0,C.jsxs)("div",{className:h,children:[(0,C.jsx)("label",{className:p,htmlFor:e,children:"Name"}),(0,C.jsx)("input",{className:x,type:"text",name:"name",id:e,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+((['\\s\\-][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),(0,C.jsxs)("div",{className:h,children:[(0,C.jsx)("label",{className:p,htmlFor:t,children:"Number"}),(0,C.jsx)("input",{className:x,type:"tel",name:"number",id:t,pattern:"^\\+((?:9[679]|8[035789]|6[789]|5[90]|42|3[578]|2[1-689])|9[0-58]|8[1246]|6[0-6]|5[1-8]|4[013-9]|3[0-469]|2[70]|7|1)(?:\\W*\\d){0,13}\\d$",title:"Phone number must start with +, be at least 3 digits and can contain spaces, dashes",required:!0})]}),(0,C.jsx)("button",{className:u,type:"submit",children:"Add contact"})]})};var N=a(349);const b="Filter_filter__vxThR",v="Filter_input__N7T3z",f=()=>{const e=(0,m.Ak)(),t=(0,s.wA)();return(0,C.jsxs)("div",{className:b,children:[(0,C.jsx)("p",{children:"Find contacts by name"}),(0,C.jsx)("input",{className:v,onChange:e=>{const a=e.target.value;t((0,N.R)(a))},type:"text",name:"filter",id:e,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+((['\\s\\-][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"})]})},A="Contact_itemContainer__ydaqD",F="Contact_text__Wq-3f",k="Contact_paragraph__gC7bF",y="Contact_button__F+kJb",g=e=>{let{contact:t}=e;const a=(0,s.wA)();return(0,C.jsxs)("div",{className:A,children:[(0,C.jsxs)("div",{className:F,children:[(0,C.jsx)("p",{className:k,children:t.name}),(0,C.jsx)("p",{className:k,children:t.phone})]}),(0,C.jsx)("button",{className:y,type:"button",onClick:()=>a((0,d.MO)(t.id)),children:"Delete"})]})},w="ContactList_list__csErn",z="ContactList_listItem__SptUx",L="ContactList_error__uCB2f",Z=e=>{let{error:t}=e;const a=(0,s.d4)(o);return(0,C.jsxs)("div",{children:[t&&(0,C.jsx)("p",{className:L,children:"Failed to fetch data from the server"}),(0,C.jsx)("ul",{className:w,children:a.map((e=>(0,C.jsx)("li",{className:z,children:(0,C.jsx)(g,{contact:e})},e.id)))})]})},q="Contacts_appContainer__64XIb",B="Contacts_firstHeading__KfJXq",P="Contacts_secondHeading__Px0xm",X=()=>{const e=(0,s.d4)(c),t=(0,s.d4)(l);return(0,C.jsxs)("div",{children:[e&&!t&&(0,C.jsx)(i.a,{}),(0,C.jsxs)("div",{className:q,children:[(0,C.jsx)("h1",{className:B,children:"Phonebook"}),(0,C.jsx)(j,{}),(0,C.jsx)("h2",{className:P,children:"Contacts"}),(0,C.jsx)(f,{}),(0,C.jsx)(Z,{error:t})]})]})}}}]);
//# sourceMappingURL=165.69a6e47e.chunk.js.map